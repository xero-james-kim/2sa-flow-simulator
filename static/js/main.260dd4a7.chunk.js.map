{"version":3,"sources":["state/actions/api.ts","state/actions/mobile.ts","state/actions/browser.ts","state/actions/eventstore.ts","state/actions/index.ts","state/reducer/app.ts","state/store.ts","hooks/useStateChangeListener.ts","state/utils/usePrevious.ts","hooks/useActionDispatch.ts","state/components/mobile.tsx","hooks/useTempStore.ts","hooks/useTimeoutManager.ts","state/components/browser.tsx","state/components/api.tsx","state/components/eventstore.tsx","state/components/page.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["apiActions","api_push_result_received","args","id","Guid","create","toString","type","correlation","_correlation","description","message","actions","text","triggers","action","api_initial_state","api_push_result_sent","delay","api_push_request_received","event","api_push_request_sent","api_push_result_stale","api_push_result_valid_and_declined","api_push_result_valid_and_accepted","mobileActions","mobile_push_received","deviceName","location","userAccepted","mobile_initial_state","mobile_push_waiting_for_result","mobile_push_success","mobile_push_is_old","mobile_push_decline","browserActions","browser_initial_state","browser_push_sent","isDisabled","browser_push_ask_resend","browser_sign_in_success","browser_sign_in_declined","esActions","es_append_event","es_initial_state","initialState","mobile","browser","api","es","argEditor","slice","createSlice","name","reducers","act","state","domain","actionToDomain","payload","editArg","appActions","appReducer","reducer","domainState","split","length","useTypedSelector","useSelector","store","configureStore","useStateChangeListener","listeners","x","prevState","value","ref","useRef","useEffect","current","usePrevious","onStateChange","buildStateChangeListener","key","p","s","currState","to","cb","useDomainDispatch","dispatch","useDispatch","dispatchActionCallback","forEach","dispatchAction","a","opts","find","MobileComponent","push","useState","items","setItem","add","item","update","newItems","map","remove","newitems","filter","Error","getAll","useTempStore","onClick","isLoading","className","useTimeoutManager","timeouts","setTimeouts","addTimeout","t","timeout","setTimeout","clearTimeouts","clearTimeout","BrowserComponent","browserState","prev","curr","always","disabled","ApiComponent","latestToken","setToken","console","log","sendPush","token","EventStoreComponent","Page","style","margin","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.260dd4a7.chunk.js","sourcesContent":["import { Guid } from \"guid-typescript\";\n\nconst api_push_result_received = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_result_received\",\n    correlation: args._correlation,\n    description: \"api result is received\",\n    message: `received mobile response`,\n    args,\n    actions: [\n        {\n            text: \"accepted\",\n            triggers: [\n                { action: \"api_push_result_valid_and_accepted\", args },\n            ]\n        },\n        {\n            text: \"old push\",\n            triggers: [\n                { action: \"api_push_result_stale\", args },\n                // { action: \"api_push_result_sent\", args: {}}\n            ]\n        },\n        {\n            text: \"declined\",\n            triggers: [\n                { action: \"api_push_result_valid_and_declined\", args },\n            ]\n        }\n    ]\n})\n\nconst api_push_result_valid_and_accepted = (args:any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_result_valid_and_accepted\",\n    correlation: args._correlation,\n    description: \"push response from mobile is valid & user accepted\",\n    message: `push response from mobile is valid & user accepted`,\n    delay: 300,\n    args,\n    actions: [\n        {\n            text: \"ok\",\n            triggers: [\n                { action: \"mobile_push_success\", args },\n                { action: \"browser_sign_in_success\", args },\n                { action: \"es_append_event\", args: { event: \"UserSignInSucceeded\" } },\n                { action: \"api_push_result_sent\", args: {}}\n            ]\n        },\n        {\n            text: \"simulate failure\",\n            triggers: [\n                { action: \"mobile_push_success\", args },\n            ]\n        },\n    ]\n})\n\nconst api_push_result_valid_and_declined = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_result_valid_and_declined\",\n    correlation: args._correlation,\n    description: \"api result is received\",\n    message: `push response from mobile is valid but user declined`,\n    args,\n    actions: [\n        {\n            text: \"send back delined response\",\n            triggers: [\n                { action: \"mobile_push_decline\", args },\n                { action: \"browser_sign_in_declined\", args },\n                { action: \"es_append_event\", args: { event: \"UserSignInDeclined\" } },\n                { action: \"api_push_result_sent\", args: {}}\n            ]\n        }\n    ]\n})\n\nconst api_push_result_stale =(args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_result_stale\",\n    correlation: args._correlation,\n    description: \"api result is received\",\n    message: `push response from mobile is stale, there are newer pushes pending`,\n    args,\n    actions: [\n        {\n            text: \"send back stale response\",\n            triggers: [\n                { action: \"mobile_push_is_old\", args },\n            ]\n        }\n    ]\n})\n\n\nconst api_push_request_received = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_request_received\",\n    correlation: args._correlation,\n    args,\n    description: \"got the request to send push request from web\",\n    message: `sending push notification`,\n    actions: [\n        {\n            text: \"send push to mobile\",\n            triggers: [\n                { action: \"mobile_push_received\",  args: {...args }},\n                { action: \"api_push_request_sent\", args: {...args }},\n                { action: \"es_append_event\", args: { event: \"UserSignInStarted\" } },\n            ]\n        }\n    ]\n})\n\nconst api_push_request_sent = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_request_sent\",\n    description: \"push sent, waiting for response\",\n    message: `API sent back response to mobile and appended event to ES`,\n    delay: 300,\n    actions: [],\n    args\n})\n\nconst api_push_result_sent = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_push_result_sent\",\n    description: \"api result has been sent\",\n    message: `API sent back response to mobile and appended event to ES`,\n    delay: 300,\n    actions: [],\n    args\n})\n\nconst api_initial_state = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"api_initial_state\",\n    message: \"In initial state\",\n    actions: [],\n    args\n})\n\nexport const apiActions = {\n    api_push_result_received,\n    api_initial_state,\n    api_push_result_sent,\n    api_push_request_received,\n    api_push_request_sent,\n    api_push_result_stale,\n    api_push_result_valid_and_declined,\n    api_push_result_valid_and_accepted\n}","import { Guid } from \"guid-typescript\";\n\nconst mobile_push_received = (args: any) => {\n    return {\n    id: Guid.create().toString(),\n    type: \"mobile_push_received\",\n    correlation: args._correlation,\n    message: `Logging in from ${args.deviceName}, ${args.location}. Is this you? `,\n    description: \"\",\n    actions: [\n        {\n            text: \"yes\",\n            triggers: [\n                { action: \"api_push_result_received\", args: {...args, userAccepted: true} },\n                { action: \"mobile_push_waiting_for_result\", args: {...args} },\n            ]\n        },\n        {\n            text: \"no\",\n            triggers: [\n                { action: \"api_push_result_received\", args: {...args, userAccepted: false} },\n                { action: \"mobile_push_waiting_for_result\", args: {...args} },\n            ]\n        }\n    ],\n    args\n}}\n\nconst mobile_push_waiting_for_result = (args: any) => ({\n    id: Guid.create().toString(),\n    correlation: args._correlation,\n    type: \"mobile_push_waiting_for_result\",\n    message: ``,\n    description: \"\",\n    actions: [],\n    args\n})\n\nconst mobile_push_success = (args: any) => ({\n    id: Guid.create().toString(),\n    correlation: args._correlation,\n    type: \"mobile_push_success\",\n    message: `login successful!`,\n    description: \"\",\n    actions: [],\n    args\n})\n\nconst mobile_push_decline = (args: any) => ({\n    id: Guid.create().toString(),\n    correlation: args._correlation,\n    type: \"mobile_push_decline\",\n    message: `login successful!`,\n    description: \"\",\n    actions: [],\n    args\n})\n\n\nconst mobile_push_is_old = (args: any) => ({\n    id: Guid.create().toString(),\n    correlation: args._correlation,\n    type: \"mobile_push_is_old\",\n    message: `push is old!`,\n    description: \"\",\n    actions: [],\n    args\n})\n\nconst mobile_initial_state = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"mobile_initial_state\",\n    message: \"Waiting for input\",\n    actions: []\n})\n\nexport const mobileActions = {\n    mobile_push_received,\n    mobile_initial_state,\n    mobile_push_waiting_for_result,\n    mobile_push_success,\n    mobile_push_is_old,\n    mobile_push_decline\n}","import { Guid } from \"guid-typescript\";\n\nconst browser_initial_state = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"browser_initial_state\",\n    message: \"We need to send a push notificaiton to your device to make sure it is really you\",\n    actions: [\n        {\n            text: \"send push\",\n            triggers: [\n                { action: \"api_push_request_received\", args: {...args }},\n                { action: \"browser_push_sent\", args: {...args }},\n            ]\n        }\n    ]\n})\n\nconst browser_push_sent = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"browser_push_sent\",\n    message: \"We've sent a push notification to you!\",\n    args,\n    actions: [\n        {\n            text: \"send push\",\n            isDisabled: true,\n            triggers: [\n                { action: \"browser_push_ask_resend\", args: {...args }}\n            ]\n        }\n    ]\n})\n\nconst browser_push_ask_resend = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"browser_push_ask_resend\",\n    message: \"Did you not get the notification?\",\n    args, \n    actions: [\n        {\n            text: \"resend push\",\n            isDisabled: false,\n            triggers: [\n                { action: \"api_push_request_received\", args: {...args }},\n                { action: \"browser_push_sent\", args: {...args }}\n            ]\n        }\n    ]\n})\n\nconst browser_sign_in_success = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"browser_sign_in_success\",\n    message: \"Signin Successful!\",\n    args, \n    actions: []\n})\n\nconst browser_sign_in_declined = (args: any) => ({\n    id: Guid.create().toString(),\n    type: \"browser_sign_in_declined\",\n    message: \"Sign in declined in mobile\",\n    args, \n    actions: []\n})\n\nexport const browserActions = {\n    browser_initial_state,\n    browser_push_sent,\n    browser_push_ask_resend,\n    browser_sign_in_success,\n    browser_sign_in_declined\n}","import { Guid } from \"guid-typescript\";\n\n\nconst es_append_event = (args: any) => ({\n    id: Guid.create().toString(),\n    args,\n    type: \"es_append_event\",\n    message: \"\",\n    description: \"\",\n    actions: [\n       { text: args.event, triggers: [] } \n    ]\n})\n\nconst es_initial_state = (args:any) => ({\n    id: Guid.create().toString(),\n    args,\n    type: \"es_initial_state\",\n    message: ``,\n    description: \"\",\n    actions: []\n})\n\nexport const esActions = {\n    es_append_event,\n    es_initial_state\n}\n","import { apiActions } from \"./api\";\nimport { mobileActions } from \"./mobile\";\nimport { browserActions } from './browser';\nimport { esActions } from './eventstore';\n\nexport type DomainActions = typeof actions\nexport const actions = {\n    ...browserActions,\n    ...apiActions,\n    ...mobileActions,\n    ...esActions\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { actions } from '../actions/index';\nimport { AppState, DomainState } from '../types';\n\n\nconst initialState: AppState = {\n    mobile: actions.mobile_initial_state({}),\n    browser: actions.browser_initial_state({}),\n    api: actions.api_initial_state({}),\n    es: actions.es_initial_state({}),\n    argEditor: {\n    }\n}\n\nconst slice = createSlice({\n    name: \"app\",\n    initialState,\n    reducers: {\n        act: (state, action: PayloadAction<DomainState>) => {\n            const domain = actionToDomain(action.payload)\n            if(domain) {\n                if(domain === \"es\") {\n                    state[domain] = {\n                        ...state[domain],\n                        actions: [\n                            ...state[domain].actions,\n                            ...action.payload.actions\n                        ]\n                    }\n                } else {\n                    state[domain] = {\n                        ...action.payload,\n                    } \n                }\n            }\n            state.argEditor = action.payload.args\n        }, \n        editArg: (state, action: PayloadAction<{args: any}>) => {\n            const { args } = action.payload\n            state.argEditor = args\n        }\n    }\n})\n\nexport const appActions = slice.actions\nexport const appReducer = slice.reducer \n\nconst actionToDomain = (domainState: DomainState) => {\n    const split = domainState.type.split('_')\n    if(split.length > 0 \n        && (split[0] === \"mobile\" \n        || split[0] === \"browser\"\n        || split[0] === \"api\"\n        || split[0] === \"es\")\n       ){\n        return split[0]\n    }\n    return null\n}","import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { AppState } from './types';\nimport { rootReducer } from './reducer/index';\nimport { appReducer } from './reducer/app';\n\nexport const useTypedSelector: TypedUseSelectorHook<AppState> = useSelector\nexport const store = configureStore({\n    reducer: appReducer\n})\n","import React, { useEffect } from 'react'\nimport { AppState, DomainState } from '../state/types';\nimport { usePrevious } from '../state/utils/usePrevious';\nimport { useTypedSelector } from '../state/store';\nimport { actions } from '../state/actions/index';\n\ntype DomainKey = Exclude<keyof AppState, \"argEditor\">\ntype a = typeof actions & { always: \"\" }\nexport type StateListener = {\n    [P in keyof a]?: (prevState: DomainState | undefined, state: DomainState) => void\n}\n\nexport const useStateChangeListener = (domain: DomainKey, listeners: StateListener) => {\n    const state = useTypedSelector(x => x[domain]) \n    const prevState = usePrevious<DomainState>(state)\n    \n    useEffect(()=> {\n        const onStateChange = buildStateChangeListener(prevState, state)\n        for(let key in listeners)  {\n            const noop = (p: DomainState | undefined, s: DomainState)=>{}\n            onStateChange(key, listeners[key as keyof typeof listeners] || noop)\n        }\n    }, [prevState, state])\n}\n\nexport const buildStateChangeListener = (prevState: DomainState | undefined, currState: DomainState) => (to:string, cb: (p: DomainState | undefined, curr: DomainState)=> void) => {\n    if(to === \"always\") {\n        if(!prevState) {\n            cb(prevState, currState)\n            return\n        }\n        if(prevState && prevState.id !== currState.id) {\n            cb(prevState, currState)\n            return\n        }\n    }\n    if(!prevState && currState.type === to) {\n        cb(prevState, currState)\n        return\n    }\n    if(prevState && prevState.id !== currState.id && currState.type === to)  {\n        cb(prevState, currState)\n        return\n    }\n\n}","import React, { useRef, useEffect } from \"react\";\n\nexport function usePrevious<T>(value: T) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef<T>();\n    \n    // Store current value in ref\n    useEffect(() => {\n      ref.current = value;\n    }, [value]); // Only re-run if value changes\n    \n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n  }","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { appActions } from '../state/reducer/app';\nimport { DomainState, AppAction } from '../state/types';\nimport { actions } from '../state/actions';\n\n\ntype DispatchOptions = {\n    correlation?: string\n    delay?: number\n}\n\nexport const useDomainDispatch = () => {\n    const dispatch = useDispatch()\n\n    /// otherwise finds the action\n    /// default to first choice \n    const dispatchAction = (a: AppAction[], text?: string, opts: DispatchOptions = {}) => {\n        const { correlation, delay } = opts\n        const action = a.find(x => x.text === text)\n        if(text && action) {\n            dispatchActionCallback(action, correlation)()\n        } else if(a.length) {\n            dispatchActionCallback(a[0], correlation)()\n        }\n    }\n\n    const dispatchActionCallback = ({ triggers }: AppAction, correlation?: string) => () => {\n        triggers.forEach(({ action, args})=> {\n            dispatch(\n                appActions.act(actions[action as keyof typeof actions]({ ...args, _correlation: correlation })))\n        })\n    }\n    \n    return {\n        dispatchAction,\n        dispatchActionCallback\n    }\n}","import React from 'react'\nimport { useTypedSelector } from '../store';\n// import { Card, Button } from 'antd';\nimport { DomainState, AppAction } from '../types';\nimport { useTempStore } from '../../hooks/useTempStore';\nimport { StateListener, useStateChangeListener } from '../../hooks/useStateChangeListener';\nimport { useDomainDispatch } from '../../hooks/useActionDispatch';\n\ntype Props = {\n}\n\ntype PushNotification = DomainState & {\n    isLoading: boolean\n}\n\nexport const MobileComponent: React.FC<Props> = () => {\n    const state = useTypedSelector(x => x.mobile)\n    const push = useTempStore<PushNotification>()\n    const {  dispatchActionCallback } = useDomainDispatch()\n\n    const listeners: StateListener = {\n        mobile_push_received: ()=> {\n            push.add({...state, isLoading: false, id: state.correlation || \"\"})\n        },\n        // mobile_push_waiting_for_result: ()=> {\n        //     push.update({ ...push.find(state.correlation), isLoading: true })\n        // },\n        // mobile_push_success: (prev, curr)=> {\n        //     push.remove(curr.correlation)\n        // },\n        // mobile_push_decline: (prev, curr)=> {\n        //     push.remove(curr.correlation)\n        // },\n        // mobile_push_is_old: (prev, curr)=> {\n        //     push.update({ ...push.find(state.correlation), isLoading: false, message: curr.message, actions: [] })\n        // }\n    }\n\n    const onClick = (action: AppAction, id: string) => () => {\n        push.remove(id)\n        dispatchActionCallback(action, id)()\n    }\n\n    useStateChangeListener(\"mobile\", listeners)\n    return <div>\n        <h2 className=\"title\">Mobile</h2>\n        {\n            push.getAll().map(push => {\n                if(push.isLoading){\n                    return <div className=\"box\">\n                            loading...\n                    </div> \n                }\n                return (<div className=\"box\">\n                    {push.message}\n                    {\n                        push.actions.map(action=> {\n                            return (\n                                <div>\n                                    <button className=\"button\" onClick={onClick(action, push.id)}>\n                                        {action.text}\n                                    </button>\n                                </div>\n                            )\n                        })\n                    }\n                    </div>\n                )\n        })\n    }\n    </div>\n}\n","import React, { useEffect, useState } from 'react'\n\nexport const useTempStore = <T extends {id: string}>() => {\n    const [items, setItem] = useState<T[]>([])\n    \n    const add = (item: T) => {\n        setItem([...items, item])\n    }\n\n    const update = (push: T) => {\n        const newItems = items.map(x => {\n            if(x.id === push.id) {\n                return push\n            }\n            return x\n        })\n        setItem(newItems)\n    }\n\n    const remove = (id: string| undefined) => {\n        const newitems = items.filter(x => x.id !== id)\n        setItem(newitems)\n    }\n\n    const find = (id: string | undefined) => {\n        const push = items.find(x => x.id === id)\n        if(!push) {\n            throw new Error(\"Cant find item: \" + id)\n        }\n        return { ...push }\n    } \n\n    const getAll = () => {\n        return items \n    }\n\n    return {\n        add, update, remove, find, getAll\n    }\n}\n\n","import React, { useState } from 'react'\n\nexport const useTimeoutManager = () => {\n    const [timeouts, setTimeouts] = useState<number[]>([])\n\n    const add = (t: number) => setTimeouts([...timeouts, t])\n\n    const addTimeout = (cb: ()=> void, delay?: number) => {\n        const timeout = setTimeout(cb, delay)\n        add(timeout)\n    }\n\n    const clearTimeouts = () => timeouts.forEach(clearTimeout)\n\n    return {\n        addTimeout, clearTimeouts\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { useTypedSelector } from '../store';\nimport { useDomainDispatch } from '../../hooks/useActionDispatch';\nimport { StateListener, useStateChangeListener } from '../../hooks/useStateChangeListener';\nimport { useTimeoutManager } from '../../hooks/useTimeoutManager';\n\ntype Props = {}\nexport const BrowserComponent: React.FC<Props> = () => {\n    const browserState = useTypedSelector(x => x.browser)\n    const { dispatchAction, dispatchActionCallback } = useDomainDispatch()\n    const { addTimeout, clearTimeouts} = useTimeoutManager()\n\n    const listeners: StateListener = {\n        browser_push_sent: (prev, curr)=> {\n            addTimeout(()=> {\n                dispatchAction(browserState.actions, \"send push\") \n            }, 5000)\n        },\n        always: () => {\n            clearTimeouts()\n        }\n    }\n\n    useStateChangeListener(\"browser\", listeners)\n\n    return <div>\n        <h2 className=\"title\">Browser</h2>\n        <div className=\"box\">\n        {browserState.message}  \n        <div>\n       {\n            browserState.actions.map(action =>{\n                return <button className=\"button\" onClick={dispatchActionCallback(action)} disabled={action.isDisabled}>\n                    {action.text}\n                </button>\n            })            \n       }\n        </div>\n\n        </div>\n       \n    </div>\n}\n","import React, { useEffect, useState } from 'react'\nimport { useTypedSelector } from '../store';\n// import { Card, Button } from 'antd';\nimport { useStateChangeListener, StateListener } from '../../hooks/useStateChangeListener';\nimport { useDomainDispatch } from '../../hooks/useActionDispatch';\nimport { Guid } from 'guid-typescript';\nimport { AppAction } from '../types';\n\ntype Props = {}\n\nexport const ApiComponent: React.FC<Props> = () => {\n    const state  = useTypedSelector(x => x.api)\n    const { correlation, actions, message } = state\n    const { dispatchAction, dispatchActionCallback } = useDomainDispatch()\n    const [latestToken, setToken] = useState<string | null>(null)\n\n    const listeners: StateListener = {\n        api_push_result_received: (prev, curr)=> {\n            if(latestToken === correlation) {\n                if(curr.args.userAccepted) {\n                    dispatchAction(actions, \"accepted\", { correlation }) \n                } else {\n                    dispatchAction(actions, \"declined\", { correlation }) \n                }\n            } else {\n                console.log(\"old push\")\n                dispatchAction(actions, \"old push\", { correlation })\n            }\n        },\n        api_push_request_received: ()=> {\n            // const token = Guid.create().toString()\n            // setToken(token)\n            // dispatchAction(actions, \"send push to mobile\", { correlation: token })\n        }\n    }\n\n    const [pushId, setPushId] = useState<string | null>(null)\n\n    const sendPush =(action: AppAction) => ()=> {\n        const token = Guid.create().toString()\n        setToken(token)\n        dispatchActionCallback(action, token)()\n    }\n\n    // api needs to send correlation id and store it\n    useStateChangeListener(\"api\", listeners)\n\n    return <div>\n        <h2 className=\"title\">API</h2>\n        <div className=\"box\">\n            {message}  \n            <div>\n{\n            state.actions.map(action =>{\n                return <button className=\"button\" onClick={sendPush(action)}>\n                    {action.text}\n                </button>\n            })            \n       }\n            </div>\n                    \n        </div>\n\n    </div>\n}\n","import React from 'react'\nimport { useTypedSelector } from '../store';\nimport { useDomainDispatch } from '../../hooks/useActionDispatch';\n\ntype Props = {\n}\n\nexport const EventStoreComponent: React.FC<Props> = () => {\n    const state = useTypedSelector(x => x.es)\n\n    return <div>\n        <h2 className=\"title\">Eventstore</h2>\n       {\n            state.actions.map(action =>{\n                return <div>\n                    {action.text}\n                </div>\n            })            \n       }\n    </div>\n}\n","import React from 'react'\nimport { DomainComponent } from './domain';\nimport { MobileComponent } from './mobile';\nimport { BrowserComponent } from './browser';\nimport { ApiComponent } from './api';\nimport { EventStoreComponent } from './eventstore';\n\ntype Props = {\n\n}\n\nexport const Page: React.FC<Props> = () => {\n\n    return <div className=\"columns\" style={{margin: \"20px\"}}>\n        <div className=\"column\">\n            <BrowserComponent />\n        </div>\n        <div className=\"column\">\n            <MobileComponent />\n        </div>\n        <div className=\"column\">\n            <ApiComponent />\n        </div>\n        <div className=\"column\">\n            <EventStoreComponent />\n        </div>\n    </div>\n}","import React from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css'\nimport { Provider } from 'react-redux'\nimport { store } from './state/store'\nimport { Page } from './state/components/page';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Page />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import LocaleProvider from 'antd/lib/locale-provider'\n// import enUS from 'antd/lib/locale-provider/en_US'\n// \nReactDOM.render(\n  <React.StrictMode>\n    {/* <LocaleProvider locale={enUS}> */}\n      <App />\n    {/* </LocaleProvider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}